/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package shapesort;

import org.junit.jupiter.api.Test;
import shapesort.model.Shape;
import shapesort.model.ShapeFactory;
import shapesort.util.SortingTechnique;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class ShapeTest {
    ShapeFactory sf = ShapeFactory.getInstance();

    @Test
    void testShapeCompareTo() {
        final int CASES = 1000;

        for (int i = 0; i < CASES; i++) {
            Shape s1 = sf.create();
            Shape s2 = sf.create();
            assertTrue(s1.compareTo(s2) < 0 && s1.area() < s2.area() ||
                    s1.compareTo(s2) > 0 && s1.area() > s2.area() ||
                    s1.compareTo(s2) == 0 && s1.area() == s2.area());
        }
    }

    @Test
    void testShapeSort() {
        final int NUM_SHAPES = 1000;
        final ArrayList<Shape> shapes = new ArrayList<>();

        for (int i = 0; i < NUM_SHAPES; i++)
            shapes.add(sf.create());

        SortingTechnique.sort(shapes);

        for (int i = 0; i < shapes.size() - 1; ++i)
            assertFalse(shapes.get(i).compareTo(shapes.get(i + 1)) > 0);
    }
}
